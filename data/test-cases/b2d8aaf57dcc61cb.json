{"uid":"b2d8aaf57dcc61cb","name":"test_resize_resizable","fullName":"tests.test_interactions.TestResizablePage#test_resize_resizable","historyId":"fbdfcfa5ba263315fa14821af429a6aa","time":{"start":1727385716326,"stop":1727385717478,"duration":1152},"description":"Can resize the Resizable element","descriptionHtml":"<p>Can resize the Resizable element</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x5561f323210a <unknown>\n#1 0x5561f2f1843d <unknown>\n#2 0x5561f2fb64db <unknown>\n#3 0x5561f2f8cb22 <unknown>\n#4 0x5561f2fabd7d <unknown>\n#5 0x5561f2f8c8c3 <unknown>\n#6 0x5561f2f5a6b3 <unknown>\n#7 0x5561f2f5b68e <unknown>\n#8 0x5561f31fcb0b <unknown>\n#9 0x5561f3200a91 <unknown>\n#10 0x5561f31e9305 <unknown>\n#11 0x5561f3201612 <unknown>\n#12 0x5561f31ce46f <unknown>\n#13 0x5561f3221008 <unknown>\n#14 0x5561f32211d3 <unknown>\n#15 0x5561f3230f5c <unknown>\n#16 0x7f33cba7a144 <unknown>","statusTrace":"self = <test_interactions.TestInteractions.TestResizablePage object at 0x7f5ab8aa6ff0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0967e68f5f945b74e008136477153814\")>\ncheck = <pytest_check.context_manager.CheckContextManager object at 0x7f5ab97c1400>\n\n    @allure.description('Can resize the Resizable element')\n    def test_resize_resizable(self, driver, check):\n        page = ResizablePage(driver, URL.RESIZABLE)\n        page.open_page()\n    \n>       default_size, max_size, min_size = page.resize_resizable()\n\ntests/test_interactions.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/interactions_page.py:89: in resize_resizable\n    self.drag_and_drop_by_offset(handle, 500, 50)\npages/base_page.py:125: in drag_and_drop_by_offset\n    action.drag_and_drop_by_offset(element, x_coords, y_coords).perform()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/action_chains.py:94: in perform\n    self.w3c_actions.perform()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/actions/action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5ab8aeacc0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"move target out of bounds\\\\n  (Sess...\\\\n#14 0x5561f32211d3 \\\\u003Cunknown>\\\\n#15 0x5561f3230f5c \\\\u003Cunknown>\\\\n#16 0x7f33cba7a144 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\nE         (Session info: chrome=129.0.6668.70)\nE       Stacktrace:\nE       #0 0x5561f323210a <unknown>\nE       #1 0x5561f2f1843d <unknown>\nE       #2 0x5561f2fb64db <unknown>\nE       #3 0x5561f2f8cb22 <unknown>\nE       #4 0x5561f2fabd7d <unknown>\nE       #5 0x5561f2f8c8c3 <unknown>\nE       #6 0x5561f2f5a6b3 <unknown>\nE       #7 0x5561f2f5b68e <unknown>\nE       #8 0x5561f31fcb0b <unknown>\nE       #9 0x5561f3200a91 <unknown>\nE       #10 0x5561f31e9305 <unknown>\nE       #11 0x5561f3201612 <unknown>\nE       #12 0x5561f31ce46f <unknown>\nE       #13 0x5561f3221008 <unknown>\nE       #14 0x5561f32211d3 <unknown>\nE       #15 0x5561f3230f5c <unknown>\nE       #16 0x7f33cba7a144 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: MoveTargetOutOfBoundsException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1727385594392,"stop":1727385594417,"duration":25},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1727385713235,"stop":1727385713577,"duration":342},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"check","time":{"start":1727385716326,"stop":1727385716326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Can resize the Resizable element","status":"broken","statusMessage":"selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x5561f323210a <unknown>\n#1 0x5561f2f1843d <unknown>\n#2 0x5561f2fb64db <unknown>\n#3 0x5561f2f8cb22 <unknown>\n#4 0x5561f2fabd7d <unknown>\n#5 0x5561f2f8c8c3 <unknown>\n#6 0x5561f2f5a6b3 <unknown>\n#7 0x5561f2f5b68e <unknown>\n#8 0x5561f31fcb0b <unknown>\n#9 0x5561f3200a91 <unknown>\n#10 0x5561f31e9305 <unknown>\n#11 0x5561f3201612 <unknown>\n#12 0x5561f31ce46f <unknown>\n#13 0x5561f3221008 <unknown>\n#14 0x5561f32211d3 <unknown>\n#15 0x5561f3230f5c <unknown>\n#16 0x7f33cba7a144 <unknown>","statusTrace":"self = <test_interactions.TestInteractions.TestResizablePage object at 0x7f5ab8aa6ff0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0967e68f5f945b74e008136477153814\")>\ncheck = <pytest_check.context_manager.CheckContextManager object at 0x7f5ab97c1400>\n\n    @allure.description('Can resize the Resizable element')\n    def test_resize_resizable(self, driver, check):\n        page = ResizablePage(driver, URL.RESIZABLE)\n        page.open_page()\n    \n>       default_size, max_size, min_size = page.resize_resizable()\n\ntests/test_interactions.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/interactions_page.py:89: in resize_resizable\n    self.drag_and_drop_by_offset(handle, 500, 50)\npages/base_page.py:125: in drag_and_drop_by_offset\n    action.drag_and_drop_by_offset(element, x_coords, y_coords).perform()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/action_chains.py:94: in perform\n    self.w3c_actions.perform()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/actions/action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5ab8aeacc0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"move target out of bounds\\\\n  (Sess...\\\\n#14 0x5561f32211d3 \\\\u003Cunknown>\\\\n#15 0x5561f3230f5c \\\\u003Cunknown>\\\\n#16 0x7f33cba7a144 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\nE         (Session info: chrome=129.0.6668.70)\nE       Stacktrace:\nE       #0 0x5561f323210a <unknown>\nE       #1 0x5561f2f1843d <unknown>\nE       #2 0x5561f2fb64db <unknown>\nE       #3 0x5561f2f8cb22 <unknown>\nE       #4 0x5561f2fabd7d <unknown>\nE       #5 0x5561f2f8c8c3 <unknown>\nE       #6 0x5561f2f5a6b3 <unknown>\nE       #7 0x5561f2f5b68e <unknown>\nE       #8 0x5561f31fcb0b <unknown>\nE       #9 0x5561f3200a91 <unknown>\nE       #10 0x5561f31e9305 <unknown>\nE       #11 0x5561f3201612 <unknown>\nE       #12 0x5561f31ce46f <unknown>\nE       #13 0x5561f3221008 <unknown>\nE       #14 0x5561f32211d3 <unknown>\nE       #15 0x5561f3230f5c <unknown>\nE       #16 0x7f33cba7a144 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: MoveTargetOutOfBoundsException","steps":[{"name":"Open https://demoqa.com/resizable page","time":{"start":1727385716326,"stop":1727385716789,"duration":463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Resize the Resizable element","time":{"start":1727385716789,"stop":1727385717478,"duration":689},"status":"broken","statusMessage":"selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x5561f323210a <unknown>\n#1 0x5561f2f1843d <unknown>\n#2 0x5561f2fb64db <unknown>\n#3 0x5561f2f8cb22 <unknown>\n#4 0x5561f2fabd7d <unknown>\n#5 0x5561f2f8c8c3 <unknown>\n#6 0x5561f2f5a6b3 <unknown>\n#7 0x5561f2f5b68e <unknown>\n#8 0x5561f31fcb0b <unknown>\n#9 0x5561f3200a91 <unknown>\n#10 0x5561f31e9305 <unknown>\n#11 0x5561f3201612 <unknown>\n#12 0x5561f31ce46f <unknown>\n#13 0x5561f3221008 <unknown>\n#14 0x5561f32211d3 <unknown>\n#15 0x5561f3230f5c <unknown>\n#16 0x7f33cba7a144 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/test_project/pages/interactions_page.py\", line 89, in resize_resizable\n    self.drag_and_drop_by_offset(handle, 500, 50)\n  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/test_project/pages/base_page.py\", line 125, in drag_and_drop_by_offset\n    action.drag_and_drop_by_offset(element, x_coords, y_coords).perform()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Get the size of the resizable element","time":{"start":1727385716789,"stop":1727385717052,"duration":263},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"('css selector', '#resizable')"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Drag and drop by offset","time":{"start":1727385717081,"stop":1727385717477,"duration":396},"status":"broken","statusMessage":"selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x5561f323210a <unknown>\n#1 0x5561f2f1843d <unknown>\n#2 0x5561f2fb64db <unknown>\n#3 0x5561f2f8cb22 <unknown>\n#4 0x5561f2fabd7d <unknown>\n#5 0x5561f2f8c8c3 <unknown>\n#6 0x5561f2f5a6b3 <unknown>\n#7 0x5561f2f5b68e <unknown>\n#8 0x5561f31fcb0b <unknown>\n#9 0x5561f3200a91 <unknown>\n#10 0x5561f31e9305 <unknown>\n#11 0x5561f3201612 <unknown>\n#12 0x5561f31ce46f <unknown>\n#13 0x5561f3221008 <unknown>\n#14 0x5561f32211d3 <unknown>\n#15 0x5561f3230f5c <unknown>\n#16 0x7f33cba7a144 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/test_project/pages/base_page.py\", line 125, in drag_and_drop_by_offset\n    action.drag_and_drop_by_offset(element, x_coords, y_coords).perform()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"element","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"0967e68f5f945b74e008136477153814\", element=\"f.52C578F69B68AE09A0F5586B221A1F6F.d.245EAA6F2DF4C7A91A2D1F5054D10D83.e.38\")>"},{"name":"x_coords","value":"500"},{"name":"y_coords","value":"50"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"844955dcd0666e97","name":"stdout","source":"844955dcd0666e97.txt","type":"text/plain","size":14}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1727385717514,"stop":1727385717779,"duration":265},"status":"passed","steps":[],"attachments":[{"uid":"9b8e058e8f9fb71b","name":"Screenshot 2024-09-26 21:21:57.702947","source":"9b8e058e8f9fb71b.png","type":"image/png","size":410359}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Resizable elements"},{"name":"suite","value":"Interactions"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestInteractions"},{"name":"host","value":"c2f2b73e625d"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_interactions"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":2,"skipped":0,"passed":1,"unknown":0,"total":4},"items":[{"uid":"9023a107ec168615","status":"broken","statusDetails":"selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x55675a1be10a <unknown>\n#1 0x556759ea443d <unknown>\n#2 0x556759f424db <unknown>\n#3 0x556759f18b22 <unknown>\n#4 0x556759f37d7d <unknown>\n#5 0x556759f188c3 <unknown>\n#6 0x556759ee66b3 <unknown>\n#7 0x556759ee768e <unknown>\n#8 0x55675a188b0b <unknown>\n#9 0x55675a18ca91 <unknown>\n#10 0x55675a175305 <unknown>\n#11 0x55675a18d612 <unknown>\n#12 0x55675a15a46f <unknown>\n#13 0x55675a1ad008 <unknown>\n#14 0x55675a1ad1d3 <unknown>\n#15 0x55675a1bcf5c <unknown>\n#16 0x7fd305d39144 <unknown>","time":{"start":1727384572049,"stop":1727384573842,"duration":1793}},{"uid":"e52704ada6342490","status":"failed","statusDetails":"AssertionError: FAILURE: The size was not decreased along the X axis\nassert 700 < 700\ntest_interactions.py:62 in test_resize_resizable() -> with check:\ntest_interactions.py:63 in test_resize_resizable -> assert min_size[0] < max_size[0], 'The size was not decreased along the X axis'\nAssertionError: The size was not decreased along the X axis\nassert 700 < 700\n\n\nFAILURE: The size was not decreased along the Y axis\nassert 250 < 250\n------------------------------------------------------------\nFailed Checks: 2","time":{"start":1727306084654,"stop":1727306086639,"duration":1985}},{"uid":"ceeddad7c32b8749","status":"passed","time":{"start":1727299644433,"stop":1727299646613,"duration":2180}}]},"tags":[]},"source":"b2d8aaf57dcc61cb.json","parameterValues":[]}