{"uid":"56e4ac03573816e","name":"test_accordion","fullName":"tests.test_widgets.TestAccordion#test_accordion","historyId":"32a338f1cf373ccbf843b15c16836506","time":{"start":1727384607118,"stop":1727384615817,"duration":8699},"description":"Accordion sections can be expanded/collapsed","descriptionHtml":"<p>Accordion sections can be expanded/collapsed</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"card-header\" id=\"section3Heading\">...</div> is not clickable at point (952, 937). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://0c25a64ee2175e846762d5a189842570.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" allow=\"private-state-token-redemption\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x5599fae0e10a <unknown>\n#1 0x5599faaf45e0 <unknown>\n#2 0x5599fab4a866 <unknown>\n#3 0x5599fab4878d <unknown>\n#4 0x5599fab46237 <unknown>\n#5 0x5599fab45646 <unknown>\n#6 0x5599fab38a98 <unknown>\n#7 0x5599fab68b22 <unknown>\n#8 0x5599fab38478 <unknown>\n#9 0x5599fab68cee <unknown>\n#10 0x5599fab87d7d <unknown>\n#11 0x5599fab688c3 <unknown>\n#12 0x5599fab366b3 <unknown>\n#13 0x5599fab3768e <unknown>\n#14 0x5599fadd8b0b <unknown>\n#15 0x5599faddca91 <unknown>\n#16 0x5599fadc5305 <unknown>\n#17 0x5599faddd612 <unknown>\n#18 0x5599fadaa46f <unknown>\n#19 0x5599fadfd008 <unknown>\n#20 0x5599fadfd1d3 <unknown>\n#21 0x5599fae0cf5c <unknown>\n#22 0x7fc8a99ac144 <unknown>","statusTrace":"self = <test_widgets.TestWidgets.TestAccordion object at 0x7ff50e5fbb30>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"32dacfdde9cf007df16d48489624e92e\")>\n\n    @allure.description('Accordion sections can be expanded/collapsed')\n    def test_accordion(self, driver):\n        page = AccordionPage(driver, URL.ACCORDIAN)\n        page.open_page()\n    \n        assert page.is_first_content_displayed() is True, 'First section is initially collapsed'\n        page.click_second_section_title()\n        assert page.is_first_content_displayed() is False, \\\n            'First section content is still displayed after clicking the second section title'\n        assert page.is_second_content_displayed() is True, \\\n            'Second section content is not displayed after clicking the second section title'\n>       page.click_third_section_title()\n\ntests/test_widgets.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/widgets_page.py:27: in click_third_section_title\n    self.find_element(self.locators.THIRD_SECTION).click()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff50e63b260>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5599fadfd1d3 \\\\u003Cunknown>\\\\n#21 0x5599fae0cf5c \\\\u003Cunknown>\\\\n#22 0x7fc8a99ac144 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"card-header\" id=\"section3Heading\">...</div> is not clickable at point (952, 937). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://0c25a64ee2175e846762d5a189842570.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" allow=\"private-state-token-redemption\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\nE         (Session info: chrome=129.0.6668.70)\nE       Stacktrace:\nE       #0 0x5599fae0e10a <unknown>\nE       #1 0x5599faaf45e0 <unknown>\nE       #2 0x5599fab4a866 <unknown>\nE       #3 0x5599fab4878d <unknown>\nE       #4 0x5599fab46237 <unknown>\nE       #5 0x5599fab45646 <unknown>\nE       #6 0x5599fab38a98 <unknown>\nE       #7 0x5599fab68b22 <unknown>\nE       #8 0x5599fab38478 <unknown>\nE       #9 0x5599fab68cee <unknown>\nE       #10 0x5599fab87d7d <unknown>\nE       #11 0x5599fab688c3 <unknown>\nE       #12 0x5599fab366b3 <unknown>\nE       #13 0x5599fab3768e <unknown>\nE       #14 0x5599fadd8b0b <unknown>\nE       #15 0x5599faddca91 <unknown>\nE       #16 0x5599fadc5305 <unknown>\nE       #17 0x5599faddd612 <unknown>\nE       #18 0x5599fadaa46f <unknown>\nE       #19 0x5599fadfd008 <unknown>\nE       #20 0x5599fadfd1d3 <unknown>\nE       #21 0x5599fae0cf5c <unknown>\nE       #22 0x7fc8a99ac144 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1727384397018,"stop":1727384397044,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1727384606658,"stop":1727384607118,"duration":460},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Accordion sections can be expanded/collapsed","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"card-header\" id=\"section3Heading\">...</div> is not clickable at point (952, 937). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://0c25a64ee2175e846762d5a189842570.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" allow=\"private-state-token-redemption\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x5599fae0e10a <unknown>\n#1 0x5599faaf45e0 <unknown>\n#2 0x5599fab4a866 <unknown>\n#3 0x5599fab4878d <unknown>\n#4 0x5599fab46237 <unknown>\n#5 0x5599fab45646 <unknown>\n#6 0x5599fab38a98 <unknown>\n#7 0x5599fab68b22 <unknown>\n#8 0x5599fab38478 <unknown>\n#9 0x5599fab68cee <unknown>\n#10 0x5599fab87d7d <unknown>\n#11 0x5599fab688c3 <unknown>\n#12 0x5599fab366b3 <unknown>\n#13 0x5599fab3768e <unknown>\n#14 0x5599fadd8b0b <unknown>\n#15 0x5599faddca91 <unknown>\n#16 0x5599fadc5305 <unknown>\n#17 0x5599faddd612 <unknown>\n#18 0x5599fadaa46f <unknown>\n#19 0x5599fadfd008 <unknown>\n#20 0x5599fadfd1d3 <unknown>\n#21 0x5599fae0cf5c <unknown>\n#22 0x7fc8a99ac144 <unknown>","statusTrace":"self = <test_widgets.TestWidgets.TestAccordion object at 0x7ff50e5fbb30>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"32dacfdde9cf007df16d48489624e92e\")>\n\n    @allure.description('Accordion sections can be expanded/collapsed')\n    def test_accordion(self, driver):\n        page = AccordionPage(driver, URL.ACCORDIAN)\n        page.open_page()\n    \n        assert page.is_first_content_displayed() is True, 'First section is initially collapsed'\n        page.click_second_section_title()\n        assert page.is_first_content_displayed() is False, \\\n            'First section content is still displayed after clicking the second section title'\n        assert page.is_second_content_displayed() is True, \\\n            'Second section content is not displayed after clicking the second section title'\n>       page.click_third_section_title()\n\ntests/test_widgets.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/widgets_page.py:27: in click_third_section_title\n    self.find_element(self.locators.THIRD_SECTION).click()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff50e63b260>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5599fadfd1d3 \\\\u003Cunknown>\\\\n#21 0x5599fae0cf5c \\\\u003Cunknown>\\\\n#22 0x7fc8a99ac144 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"card-header\" id=\"section3Heading\">...</div> is not clickable at point (952, 937). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://0c25a64ee2175e846762d5a189842570.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" allow=\"private-state-token-redemption\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\nE         (Session info: chrome=129.0.6668.70)\nE       Stacktrace:\nE       #0 0x5599fae0e10a <unknown>\nE       #1 0x5599faaf45e0 <unknown>\nE       #2 0x5599fab4a866 <unknown>\nE       #3 0x5599fab4878d <unknown>\nE       #4 0x5599fab46237 <unknown>\nE       #5 0x5599fab45646 <unknown>\nE       #6 0x5599fab38a98 <unknown>\nE       #7 0x5599fab68b22 <unknown>\nE       #8 0x5599fab38478 <unknown>\nE       #9 0x5599fab68cee <unknown>\nE       #10 0x5599fab87d7d <unknown>\nE       #11 0x5599fab688c3 <unknown>\nE       #12 0x5599fab366b3 <unknown>\nE       #13 0x5599fab3768e <unknown>\nE       #14 0x5599fadd8b0b <unknown>\nE       #15 0x5599faddca91 <unknown>\nE       #16 0x5599fadc5305 <unknown>\nE       #17 0x5599faddd612 <unknown>\nE       #18 0x5599fadaa46f <unknown>\nE       #19 0x5599fadfd008 <unknown>\nE       #20 0x5599fadfd1d3 <unknown>\nE       #21 0x5599fae0cf5c <unknown>\nE       #22 0x7fc8a99ac144 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Open https://demoqa.com/accordian page","time":{"start":1727384607118,"stop":1727384610600,"duration":3482},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check if content of the first section is displayed (is the first section collapsed)","time":{"start":1727384610600,"stop":1727384611641,"duration":1041},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Click the second section title","time":{"start":1727384611641,"stop":1727384611700,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check if content of the first section is displayed (is the first section collapsed)","time":{"start":1727384611701,"stop":1727384613723,"duration":2022},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Check if content of the second section is displayed (is the second section collapsed)","time":{"start":1727384613723,"stop":1727384614743,"duration":1020},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Click the third section title","time":{"start":1727384614743,"stop":1727384615816,"duration":1073},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"card-header\" id=\"section3Heading\">...</div> is not clickable at point (952, 937). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://0c25a64ee2175e846762d5a189842570.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-Anchor_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" allow=\"private-state-token-redemption\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"1\" style=\"border: 0px; vertical-align: bottom;\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x5599fae0e10a <unknown>\n#1 0x5599faaf45e0 <unknown>\n#2 0x5599fab4a866 <unknown>\n#3 0x5599fab4878d <unknown>\n#4 0x5599fab46237 <unknown>\n#5 0x5599fab45646 <unknown>\n#6 0x5599fab38a98 <unknown>\n#7 0x5599fab68b22 <unknown>\n#8 0x5599fab38478 <unknown>\n#9 0x5599fab68cee <unknown>\n#10 0x5599fab87d7d <unknown>\n#11 0x5599fab688c3 <unknown>\n#12 0x5599fab366b3 <unknown>\n#13 0x5599fab3768e <unknown>\n#14 0x5599fadd8b0b <unknown>\n#15 0x5599faddca91 <unknown>\n#16 0x5599fadc5305 <unknown>\n#17 0x5599faddd612 <unknown>\n#18 0x5599fadaa46f <unknown>\n#19 0x5599fadfd008 <unknown>\n#20 0x5599fadfd1d3 <unknown>\n#21 0x5599fae0cf5c <unknown>\n#22 0x7fc8a99ac144 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/test_project/pages/widgets_page.py\", line 27, in click_third_section_title\n    self.find_element(self.locators.THIRD_SECTION).click()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"99873e9efb709b93","name":"stdout","source":"99873e9efb709b93.txt","type":"text/plain","size":36}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1727384615851,"stop":1727384616130,"duration":279},"status":"passed","steps":[],"attachments":[{"uid":"e3f4b636aedaf58d","name":"Screenshot 2024-09-26 21:03:36.024313","source":"e3f4b636aedaf58d.png","type":"image/png","size":512093}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Accordion"},{"name":"suite","value":"Widgets"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestWidgets"},{"name":"host","value":"6ebd0952072e"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_widgets"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"5eaa60070d6d7ff3","status":"passed","time":{"start":1727306111982,"stop":1727306122748,"duration":10766}},{"uid":"576b8a5496302710","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div class=\"card-header\" id=\"section3Heading\">...</div> is not clickable at point (772, 1013). Other element would receive the click: <iframe frameborder=\"0\" src=\"https://3dd3592b2d0c2edcd7dba0d8a190c35d.safeframe.googlesyndication.com/safeframe/1-0-40/html/container.html\" id=\"google_ads_iframe_/21849154601,22343295815/Ad.Plus-300x250_0\" title=\"3rd party ad content\" name=\"\" scrolling=\"no\" marginwidth=\"0\" marginheight=\"0\" width=\"728\" height=\"90\" data-is-safeframe=\"true\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" allow=\"private-state-token-redemption\" aria-label=\"Advertisement\" tabindex=\"0\" data-google-container-id=\"6\" style=\"border: 0px; vertical-align: bottom; max-height: 30vh !important; overflow: hidden !important; display: block; margin: 0px auto;\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x55ec5d81510a <unknown>\n#1 0x55ec5d4fb5e0 <unknown>\n#2 0x55ec5d551866 <unknown>\n#3 0x55ec5d54f78d <unknown>\n#4 0x55ec5d54d237 <unknown>\n#5 0x55ec5d54c646 <unknown>\n#6 0x55ec5d53fa98 <unknown>\n#7 0x55ec5d56fb22 <unknown>\n#8 0x55ec5d53f478 <unknown>\n#9 0x55ec5d56fcee <unknown>\n#10 0x55ec5d58ed7d <unknown>\n#11 0x55ec5d56f8c3 <unknown>\n#12 0x55ec5d53d6b3 <unknown>\n#13 0x55ec5d53e68e <unknown>\n#14 0x55ec5d7dfb0b <unknown>\n#15 0x55ec5d7e3a91 <unknown>\n#16 0x55ec5d7cc305 <unknown>\n#17 0x55ec5d7e4612 <unknown>\n#18 0x55ec5d7b146f <unknown>\n#19 0x55ec5d804008 <unknown>\n#20 0x55ec5d8041d3 <unknown>\n#21 0x55ec5d813f5c <unknown>\n#22 0x7f8485b6a144 <unknown>","time":{"start":1727299673375,"stop":1727299681114,"duration":7739}}]},"tags":[]},"source":"56e4ac03573816e.json","parameterValues":[]}