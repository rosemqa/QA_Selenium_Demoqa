{"uid":"1bab5f30faa7aad8","name":"test_practice_form","fullName":"tests.test_form.TestPracticeForm#test_practice_form","historyId":"448da45225be31e45ef8923d0a2aa572","time":{"start":1727384540853,"stop":1727384546409,"duration":5556},"description":"Can fill out and submit the form and get the correct results in the results table","descriptionHtml":"<p>Can fill out and submit the form and get the correct results in the results table</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label title=\"\" for=\"hobbies-checkbox-1\" class=\"custom-control-label\">...</label> is not clickable at point (781, 829). Other element would receive the click: <div>...</div>\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x56420c6af10a <unknown>\n#1 0x56420c3955e0 <unknown>\n#2 0x56420c3eb866 <unknown>\n#3 0x56420c3e978d <unknown>\n#4 0x56420c3e7237 <unknown>\n#5 0x56420c3e6646 <unknown>\n#6 0x56420c3d9a98 <unknown>\n#7 0x56420c409b22 <unknown>\n#8 0x56420c3d9478 <unknown>\n#9 0x56420c409cee <unknown>\n#10 0x56420c428d7d <unknown>\n#11 0x56420c4098c3 <unknown>\n#12 0x56420c3d76b3 <unknown>\n#13 0x56420c3d868e <unknown>\n#14 0x56420c679b0b <unknown>\n#15 0x56420c67da91 <unknown>\n#16 0x56420c666305 <unknown>\n#17 0x56420c67e612 <unknown>\n#18 0x56420c64b46f <unknown>\n#19 0x56420c69e008 <unknown>\n#20 0x56420c69e1d3 <unknown>\n#21 0x56420c6adf5c <unknown>\n#22 0x7f16d46b2144 <unknown>","statusTrace":"self = <test_form.TestForms.TestPracticeForm object at 0x7ff50e5d4f50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbef923d1be54261cc3e27b93ebc5108\")>\n\n    @allure.description('Can fill out and submit the form and get the correct results in the results table')\n    def test_practice_form(self, driver):\n        page = PracticeFormPage(driver, URL.FORMS)\n        page.open_page()\n    \n>       inp = page.fill_form()\n\ntests/test_form.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/form_page.py:85: in fill_form\n    random_hobby.click()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff50e627a40>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56420c69e1d3 \\\\u003Cunknown>\\\\n#21 0x56420c6adf5c \\\\u003Cunknown>\\\\n#22 0x7f16d46b2144 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label title=\"\" for=\"hobbies-checkbox-1\" class=\"custom-control-label\">...</label> is not clickable at point (781, 829). Other element would receive the click: <div>...</div>\nE         (Session info: chrome=129.0.6668.70)\nE       Stacktrace:\nE       #0 0x56420c6af10a <unknown>\nE       #1 0x56420c3955e0 <unknown>\nE       #2 0x56420c3eb866 <unknown>\nE       #3 0x56420c3e978d <unknown>\nE       #4 0x56420c3e7237 <unknown>\nE       #5 0x56420c3e6646 <unknown>\nE       #6 0x56420c3d9a98 <unknown>\nE       #7 0x56420c409b22 <unknown>\nE       #8 0x56420c3d9478 <unknown>\nE       #9 0x56420c409cee <unknown>\nE       #10 0x56420c428d7d <unknown>\nE       #11 0x56420c4098c3 <unknown>\nE       #12 0x56420c3d76b3 <unknown>\nE       #13 0x56420c3d868e <unknown>\nE       #14 0x56420c679b0b <unknown>\nE       #15 0x56420c67da91 <unknown>\nE       #16 0x56420c666305 <unknown>\nE       #17 0x56420c67e612 <unknown>\nE       #18 0x56420c64b46f <unknown>\nE       #19 0x56420c69e008 <unknown>\nE       #20 0x56420c69e1d3 <unknown>\nE       #21 0x56420c6adf5c <unknown>\nE       #22 0x7f16d46b2144 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1727384397018,"stop":1727384397044,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1727384540405,"stop":1727384540852,"duration":447},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Can fill out and submit the form and get the correct results in the results table","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label title=\"\" for=\"hobbies-checkbox-1\" class=\"custom-control-label\">...</label> is not clickable at point (781, 829). Other element would receive the click: <div>...</div>\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x56420c6af10a <unknown>\n#1 0x56420c3955e0 <unknown>\n#2 0x56420c3eb866 <unknown>\n#3 0x56420c3e978d <unknown>\n#4 0x56420c3e7237 <unknown>\n#5 0x56420c3e6646 <unknown>\n#6 0x56420c3d9a98 <unknown>\n#7 0x56420c409b22 <unknown>\n#8 0x56420c3d9478 <unknown>\n#9 0x56420c409cee <unknown>\n#10 0x56420c428d7d <unknown>\n#11 0x56420c4098c3 <unknown>\n#12 0x56420c3d76b3 <unknown>\n#13 0x56420c3d868e <unknown>\n#14 0x56420c679b0b <unknown>\n#15 0x56420c67da91 <unknown>\n#16 0x56420c666305 <unknown>\n#17 0x56420c67e612 <unknown>\n#18 0x56420c64b46f <unknown>\n#19 0x56420c69e008 <unknown>\n#20 0x56420c69e1d3 <unknown>\n#21 0x56420c6adf5c <unknown>\n#22 0x7f16d46b2144 <unknown>","statusTrace":"self = <test_form.TestForms.TestPracticeForm object at 0x7ff50e5d4f50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bbef923d1be54261cc3e27b93ebc5108\")>\n\n    @allure.description('Can fill out and submit the form and get the correct results in the results table')\n    def test_practice_form(self, driver):\n        page = PracticeFormPage(driver, URL.FORMS)\n        page.open_page()\n    \n>       inp = page.fill_form()\n\ntests/test_form.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/form_page.py:85: in fill_form\n    random_hobby.click()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff50e627a40>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56420c69e1d3 \\\\u003Cunknown>\\\\n#21 0x56420c6adf5c \\\\u003Cunknown>\\\\n#22 0x7f16d46b2144 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label title=\"\" for=\"hobbies-checkbox-1\" class=\"custom-control-label\">...</label> is not clickable at point (781, 829). Other element would receive the click: <div>...</div>\nE         (Session info: chrome=129.0.6668.70)\nE       Stacktrace:\nE       #0 0x56420c6af10a <unknown>\nE       #1 0x56420c3955e0 <unknown>\nE       #2 0x56420c3eb866 <unknown>\nE       #3 0x56420c3e978d <unknown>\nE       #4 0x56420c3e7237 <unknown>\nE       #5 0x56420c3e6646 <unknown>\nE       #6 0x56420c3d9a98 <unknown>\nE       #7 0x56420c409b22 <unknown>\nE       #8 0x56420c3d9478 <unknown>\nE       #9 0x56420c409cee <unknown>\nE       #10 0x56420c428d7d <unknown>\nE       #11 0x56420c4098c3 <unknown>\nE       #12 0x56420c3d76b3 <unknown>\nE       #13 0x56420c3d868e <unknown>\nE       #14 0x56420c679b0b <unknown>\nE       #15 0x56420c67da91 <unknown>\nE       #16 0x56420c666305 <unknown>\nE       #17 0x56420c67e612 <unknown>\nE       #18 0x56420c64b46f <unknown>\nE       #19 0x56420c69e008 <unknown>\nE       #20 0x56420c69e1d3 <unknown>\nE       #21 0x56420c6adf5c <unknown>\nE       #22 0x7f16d46b2144 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Open https://demoqa.com/automation-practice-form page","time":{"start":1727384540853,"stop":1727384544475,"duration":3622},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Fill out the form and click Submit button","time":{"start":1727384544475,"stop":1727384546409,"duration":1934},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label title=\"\" for=\"hobbies-checkbox-1\" class=\"custom-control-label\">...</label> is not clickable at point (781, 829). Other element would receive the click: <div>...</div>\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x56420c6af10a <unknown>\n#1 0x56420c3955e0 <unknown>\n#2 0x56420c3eb866 <unknown>\n#3 0x56420c3e978d <unknown>\n#4 0x56420c3e7237 <unknown>\n#5 0x56420c3e6646 <unknown>\n#6 0x56420c3d9a98 <unknown>\n#7 0x56420c409b22 <unknown>\n#8 0x56420c3d9478 <unknown>\n#9 0x56420c409cee <unknown>\n#10 0x56420c428d7d <unknown>\n#11 0x56420c4098c3 <unknown>\n#12 0x56420c3d76b3 <unknown>\n#13 0x56420c3d868e <unknown>\n#14 0x56420c679b0b <unknown>\n#15 0x56420c67da91 <unknown>\n#16 0x56420c666305 <unknown>\n#17 0x56420c67e612 <unknown>\n#18 0x56420c64b46f <unknown>\n#19 0x56420c69e008 <unknown>\n#20 0x56420c69e1d3 <unknown>\n#21 0x56420c6adf5c <unknown>\n#22 0x7f16d46b2144 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/test_project/pages/form_page.py\", line 85, in fill_form\n    random_hobby.click()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Enter first name","time":{"start":1727384544558,"stop":1727384544699,"duration":141},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Enter last name","time":{"start":1727384544699,"stop":1727384544823,"duration":124},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Enter email","time":{"start":1727384544823,"stop":1727384545028,"duration":205},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Select gender","time":{"start":1727384545028,"stop":1727384545090,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Enter phone number","time":{"start":1727384545090,"stop":1727384545168,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Enter subject/select subject","time":{"start":1727384545168,"stop":1727384545336,"duration":168},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Select a hobby","time":{"start":1727384545336,"stop":1727384546408,"duration":1072},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label title=\"\" for=\"hobbies-checkbox-1\" class=\"custom-control-label\">...</label> is not clickable at point (781, 829). Other element would receive the click: <div>...</div>\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x56420c6af10a <unknown>\n#1 0x56420c3955e0 <unknown>\n#2 0x56420c3eb866 <unknown>\n#3 0x56420c3e978d <unknown>\n#4 0x56420c3e7237 <unknown>\n#5 0x56420c3e6646 <unknown>\n#6 0x56420c3d9a98 <unknown>\n#7 0x56420c409b22 <unknown>\n#8 0x56420c3d9478 <unknown>\n#9 0x56420c409cee <unknown>\n#10 0x56420c428d7d <unknown>\n#11 0x56420c4098c3 <unknown>\n#12 0x56420c3d76b3 <unknown>\n#13 0x56420c3d868e <unknown>\n#14 0x56420c679b0b <unknown>\n#15 0x56420c67da91 <unknown>\n#16 0x56420c666305 <unknown>\n#17 0x56420c67e612 <unknown>\n#18 0x56420c64b46f <unknown>\n#19 0x56420c69e008 <unknown>\n#20 0x56420c69e1d3 <unknown>\n#21 0x56420c6adf5c <unknown>\n#22 0x7f16d46b2144 <unknown>\n\n","statusTrace":"  File \"/test_project/pages/form_page.py\", line 85, in fill_form\n    random_hobby.click()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"42b306ae1e8a02ee","name":"stdout","source":"42b306ae1e8a02ee.txt","type":"text/plain","size":36}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1727384546436,"stop":1727384546694,"duration":258},"status":"passed","steps":[],"attachments":[{"uid":"ed90a702a2f20638","name":"Screenshot 2024-09-26 21:02:26.583538","source":"ed90a702a2f20638.png","type":"image/png","size":398683}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Practice Form"},{"name":"suite","value":"Forms"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestForms"},{"name":"host","value":"6ebd0952072e"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_form"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"2d4215f1a9a3e998","status":"failed","statusDetails":"AssertionError: The data entered in the form and the results in the table are different\nassert ['Святополк К...emistry', ...] == ['Святополк К...emistry', ...]\n  At index 7 diff: '/test_project/test_file_2024-09-25_23-14-23.txt' != 'test_file_2024-09-25_23-14-23.txt'\n  Full diff:\n    [\n     'Святополк Ковалев',\n     'naina_98@example.com',\n     'Male',\n     '2642244845',...\n  \n  ...Full output truncated (10 lines hidden), use '-vv' to show","time":{"start":1727306061584,"stop":1727306065878,"duration":4294}},{"uid":"c63dabc15d0309f7","status":"failed","statusDetails":"AssertionError: The data entered in the form and the results in the table are different\nassert ['Сергей Горб... 'Maths', ...] == ['Сергей Горб... 'Maths', ...]\n  At index 7 diff: '/test_project/test_file_2024-09-25_21-27-03.txt' != 'test_file_2024-09-25_21-27-03.txt'\n  Full diff:\n    [\n     'Сергей Горбачев',\n     'mark1992@example.net',\n     'Male',\n     '4408261540',...\n  \n  ...Full output truncated (10 lines hidden), use '-vv' to show","time":{"start":1727299620865,"stop":1727299625476,"duration":4611}}]},"tags":[]},"source":"1bab5f30faa7aad8.json","parameterValues":[]}