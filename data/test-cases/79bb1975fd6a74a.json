{"uid":"79bb1975fd6a74a","name":"test_text_box","fullName":"tests.test_elements.TestTextBox#test_text_box","historyId":"7d67e56ed862241db9292f53644d0071","time":{"start":1727384444028,"stop":1727384449388,"duration":5360},"description":"Info in the output form matches the input fields","descriptionHtml":"<p>Info in the output form matches the input fields</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button id=\"submit\" type=\"button\" class=\"btn btn-primary\">...</button> is not clickable at point (1366, 918). Other element would receive the click: <div id=\"adplus-anchor\" data-google-query-id=\"CPCp98HA4YgDFb6FpgQdY4MOuA\">...</div>\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x5593dc07c10a <unknown>\n#1 0x5593dbd625e0 <unknown>\n#2 0x5593dbdb8866 <unknown>\n#3 0x5593dbdb678d <unknown>\n#4 0x5593dbdb4237 <unknown>\n#5 0x5593dbdb3646 <unknown>\n#6 0x5593dbda6a98 <unknown>\n#7 0x5593dbdd6b22 <unknown>\n#8 0x5593dbda6478 <unknown>\n#9 0x5593dbdd6cee <unknown>\n#10 0x5593dbdf5d7d <unknown>\n#11 0x5593dbdd68c3 <unknown>\n#12 0x5593dbda46b3 <unknown>\n#13 0x5593dbda568e <unknown>\n#14 0x5593dc046b0b <unknown>\n#15 0x5593dc04aa91 <unknown>\n#16 0x5593dc033305 <unknown>\n#17 0x5593dc04b612 <unknown>\n#18 0x5593dc01846f <unknown>\n#19 0x5593dc06b008 <unknown>\n#20 0x5593dc06b1d3 <unknown>\n#21 0x5593dc07af5c <unknown>\n#22 0x7f7cf3513144 <unknown>","statusTrace":"self = <test_elements.TestElements.TestTextBox object at 0x7ff50e7ce4b0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bee32a2b0ea19574a80d74b38db0c82f\")>\n\n    @allure.description('Info in the output form matches the input fields')\n    def test_text_box(self, driver):\n        page = TextBoxPage(driver, URL.TEXT_BOX)\n        page.open_page()\n    \n        full_name, email, current_address, permanent_address = page.fill_all_fields()\n>       page.click_submit_button()\n\ntests/test_elements.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/elements_page.py:47: in click_submit_button\n    self.find_element(self.locators.SUBMIT_BUTTON).click()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff50e6317f0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5593dc06b1d3 \\\\u003Cunknown>\\\\n#21 0x5593dc07af5c \\\\u003Cunknown>\\\\n#22 0x7f7cf3513144 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button id=\"submit\" type=\"button\" class=\"btn btn-primary\">...</button> is not clickable at point (1366, 918). Other element would receive the click: <div id=\"adplus-anchor\" data-google-query-id=\"CPCp98HA4YgDFb6FpgQdY4MOuA\">...</div>\nE         (Session info: chrome=129.0.6668.70)\nE       Stacktrace:\nE       #0 0x5593dc07c10a <unknown>\nE       #1 0x5593dbd625e0 <unknown>\nE       #2 0x5593dbdb8866 <unknown>\nE       #3 0x5593dbdb678d <unknown>\nE       #4 0x5593dbdb4237 <unknown>\nE       #5 0x5593dbdb3646 <unknown>\nE       #6 0x5593dbda6a98 <unknown>\nE       #7 0x5593dbdd6b22 <unknown>\nE       #8 0x5593dbda6478 <unknown>\nE       #9 0x5593dbdd6cee <unknown>\nE       #10 0x5593dbdf5d7d <unknown>\nE       #11 0x5593dbdd68c3 <unknown>\nE       #12 0x5593dbda46b3 <unknown>\nE       #13 0x5593dbda568e <unknown>\nE       #14 0x5593dc046b0b <unknown>\nE       #15 0x5593dc04aa91 <unknown>\nE       #16 0x5593dc033305 <unknown>\nE       #17 0x5593dc04b612 <unknown>\nE       #18 0x5593dc01846f <unknown>\nE       #19 0x5593dc06b008 <unknown>\nE       #20 0x5593dc06b1d3 <unknown>\nE       #21 0x5593dc07af5c <unknown>\nE       #22 0x7f7cf3513144 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1727384397018,"stop":1727384397044,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1727384443549,"stop":1727384444027,"duration":478},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Info in the output form matches the input fields","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button id=\"submit\" type=\"button\" class=\"btn btn-primary\">...</button> is not clickable at point (1366, 918). Other element would receive the click: <div id=\"adplus-anchor\" data-google-query-id=\"CPCp98HA4YgDFb6FpgQdY4MOuA\">...</div>\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x5593dc07c10a <unknown>\n#1 0x5593dbd625e0 <unknown>\n#2 0x5593dbdb8866 <unknown>\n#3 0x5593dbdb678d <unknown>\n#4 0x5593dbdb4237 <unknown>\n#5 0x5593dbdb3646 <unknown>\n#6 0x5593dbda6a98 <unknown>\n#7 0x5593dbdd6b22 <unknown>\n#8 0x5593dbda6478 <unknown>\n#9 0x5593dbdd6cee <unknown>\n#10 0x5593dbdf5d7d <unknown>\n#11 0x5593dbdd68c3 <unknown>\n#12 0x5593dbda46b3 <unknown>\n#13 0x5593dbda568e <unknown>\n#14 0x5593dc046b0b <unknown>\n#15 0x5593dc04aa91 <unknown>\n#16 0x5593dc033305 <unknown>\n#17 0x5593dc04b612 <unknown>\n#18 0x5593dc01846f <unknown>\n#19 0x5593dc06b008 <unknown>\n#20 0x5593dc06b1d3 <unknown>\n#21 0x5593dc07af5c <unknown>\n#22 0x7f7cf3513144 <unknown>","statusTrace":"self = <test_elements.TestElements.TestTextBox object at 0x7ff50e7ce4b0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bee32a2b0ea19574a80d74b38db0c82f\")>\n\n    @allure.description('Info in the output form matches the input fields')\n    def test_text_box(self, driver):\n        page = TextBoxPage(driver, URL.TEXT_BOX)\n        page.open_page()\n    \n        full_name, email, current_address, permanent_address = page.fill_all_fields()\n>       page.click_submit_button()\n\ntests/test_elements.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/elements_page.py:47: in click_submit_button\n    self.find_element(self.locators.SUBMIT_BUTTON).click()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff50e6317f0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5593dc06b1d3 \\\\u003Cunknown>\\\\n#21 0x5593dc07af5c \\\\u003Cunknown>\\\\n#22 0x7f7cf3513144 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button id=\"submit\" type=\"button\" class=\"btn btn-primary\">...</button> is not clickable at point (1366, 918). Other element would receive the click: <div id=\"adplus-anchor\" data-google-query-id=\"CPCp98HA4YgDFb6FpgQdY4MOuA\">...</div>\nE         (Session info: chrome=129.0.6668.70)\nE       Stacktrace:\nE       #0 0x5593dc07c10a <unknown>\nE       #1 0x5593dbd625e0 <unknown>\nE       #2 0x5593dbdb8866 <unknown>\nE       #3 0x5593dbdb678d <unknown>\nE       #4 0x5593dbdb4237 <unknown>\nE       #5 0x5593dbdb3646 <unknown>\nE       #6 0x5593dbda6a98 <unknown>\nE       #7 0x5593dbdd6b22 <unknown>\nE       #8 0x5593dbda6478 <unknown>\nE       #9 0x5593dbdd6cee <unknown>\nE       #10 0x5593dbdf5d7d <unknown>\nE       #11 0x5593dbdd68c3 <unknown>\nE       #12 0x5593dbda46b3 <unknown>\nE       #13 0x5593dbda568e <unknown>\nE       #14 0x5593dc046b0b <unknown>\nE       #15 0x5593dc04aa91 <unknown>\nE       #16 0x5593dc033305 <unknown>\nE       #17 0x5593dc04b612 <unknown>\nE       #18 0x5593dc01846f <unknown>\nE       #19 0x5593dc06b008 <unknown>\nE       #20 0x5593dc06b1d3 <unknown>\nE       #21 0x5593dc07af5c <unknown>\nE       #22 0x7f7cf3513144 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Open https://demoqa.com/text-box page","time":{"start":1727384444028,"stop":1727384447539,"duration":3511},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Fill in all the fields","time":{"start":1727384447539,"stop":1727384448269,"duration":730},"status":"passed","steps":[{"name":"Enter fullname","time":{"start":1727384447539,"stop":1727384447671,"duration":132},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Enter Email","time":{"start":1727384447671,"stop":1727384447885,"duration":214},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Enter current_address","time":{"start":1727384447885,"stop":1727384448109,"duration":224},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Enter permanent_address","time":{"start":1727384448109,"stop":1727384448269,"duration":160},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Click Submit button","time":{"start":1727384448269,"stop":1727384449387,"duration":1118},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button id=\"submit\" type=\"button\" class=\"btn btn-primary\">...</button> is not clickable at point (1366, 918). Other element would receive the click: <div id=\"adplus-anchor\" data-google-query-id=\"CPCp98HA4YgDFb6FpgQdY4MOuA\">...</div>\n  (Session info: chrome=129.0.6668.70)\nStacktrace:\n#0 0x5593dc07c10a <unknown>\n#1 0x5593dbd625e0 <unknown>\n#2 0x5593dbdb8866 <unknown>\n#3 0x5593dbdb678d <unknown>\n#4 0x5593dbdb4237 <unknown>\n#5 0x5593dbdb3646 <unknown>\n#6 0x5593dbda6a98 <unknown>\n#7 0x5593dbdd6b22 <unknown>\n#8 0x5593dbda6478 <unknown>\n#9 0x5593dbdd6cee <unknown>\n#10 0x5593dbdf5d7d <unknown>\n#11 0x5593dbdd68c3 <unknown>\n#12 0x5593dbda46b3 <unknown>\n#13 0x5593dbda568e <unknown>\n#14 0x5593dc046b0b <unknown>\n#15 0x5593dc04aa91 <unknown>\n#16 0x5593dc033305 <unknown>\n#17 0x5593dc04b612 <unknown>\n#18 0x5593dc01846f <unknown>\n#19 0x5593dc06b008 <unknown>\n#20 0x5593dc06b1d3 <unknown>\n#21 0x5593dc07af5c <unknown>\n#22 0x7f7cf3513144 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/test_project/pages/elements_page.py\", line 47, in click_submit_button\n    self.find_element(self.locators.SUBMIT_BUTTON).click()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"23f67091a0d767dc","name":"stdout","source":"23f67091a0d767dc.txt","type":"text/plain","size":36}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":7,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1727384449465,"stop":1727384449725,"duration":260},"status":"passed","steps":[],"attachments":[{"uid":"e876a009f90d219e","name":"Screenshot 2024-09-26 21:00:49.629547","source":"e876a009f90d219e.png","type":"image/png","size":410530}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"suite","value":"Elements"},{"name":"feature","value":"TextBox"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestElements"},{"name":"host","value":"6ebd0952072e"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_elements"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"19f5db89a4c8496b","status":"passed","time":{"start":1727305990090,"stop":1727305993202,"duration":3112}},{"uid":"aaa876fa01176cf8","status":"passed","time":{"start":1727299542872,"stop":1727299545473,"duration":2601}}]},"tags":[]},"source":"79bb1975fd6a74a.json","parameterValues":[]}