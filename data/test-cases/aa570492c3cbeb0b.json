{"uid":"aa570492c3cbeb0b","name":"test_cursor_style[bottom-auto]","fullName":"tests.test_interactions.TestDraggablePage#test_cursor_style","historyId":"dce9bb30414887005d0639ee3abb18ab","time":{"start":1727306110128,"stop":1727306111373,"duration":1245},"description":"Check the cursor style and cursor location while dragging","descriptionHtml":"<p>Check the cursor style and cursor location while dragging</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x55b90f7bb10a <unknown>\n#1 0x55b90f4a143d <unknown>\n#2 0x55b90f53f4db <unknown>\n#3 0x55b90f515b22 <unknown>\n#4 0x55b90f534d7d <unknown>\n#5 0x55b90f5158c3 <unknown>\n#6 0x55b90f4e36b3 <unknown>\n#7 0x55b90f4e468e <unknown>\n#8 0x55b90f785b0b <unknown>\n#9 0x55b90f789a91 <unknown>\n#10 0x55b90f772305 <unknown>\n#11 0x55b90f78a612 <unknown>\n#12 0x55b90f75746f <unknown>\n#13 0x55b90f7aa008 <unknown>\n#14 0x55b90f7aa1d3 <unknown>\n#15 0x55b90f7b9f5c <unknown>\n#16 0x7fa070f6c144 <unknown>","statusTrace":"self = <test_interactions.TestInteractions.TestDraggablePage object at 0x7f38cd8d2570>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"24f66144834c2e82cb9d0f3147415037\")>\ncheck = <pytest_check.context_manager.CheckContextManager object at 0x7f38ce5c5790>\ncursor_location = 'bottom', style = 'auto'\n\n    @allure.description('Check the cursor style and cursor location while dragging')\n    @pytest.mark.parametrize('cursor_location, style', [('center', 'move'),\n                                                        ('top_left', 'crosshair'),\n                                                        ('bottom', 'auto')])\n    def test_cursor_style(self, driver, check, cursor_location, style):\n        page = DraggablePage(driver, URL.DRAGGABLE)\n        page.open_page()\n    \n        (cursor_style,\n         cursor_style_during_drag,\n         expected_top_left_x,\n         expected_top_left_y,\n         top_left_x,\n>        top_left_y) = page.drag_cursor_style_elements(cursor_location)\n\ntests/test_interactions.py:180: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/interactions_page.py:222: in drag_cursor_style_elements\n    action.move_by_offset(x_offset, y_offset).perform()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/action_chains.py:94: in perform\n    self.w3c_actions.perform()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/actions/action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f38cd9194c0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"move target out of bounds\\\\n  (Sess...\\\\n#14 0x55b90f7aa1d3 \\\\u003Cunknown>\\\\n#15 0x55b90f7b9f5c \\\\u003Cunknown>\\\\n#16 0x7fa070f6c144 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\nE         (Session info: chrome=129.0.6668.58)\nE       Stacktrace:\nE       #0 0x55b90f7bb10a <unknown>\nE       #1 0x55b90f4a143d <unknown>\nE       #2 0x55b90f53f4db <unknown>\nE       #3 0x55b90f515b22 <unknown>\nE       #4 0x55b90f534d7d <unknown>\nE       #5 0x55b90f5158c3 <unknown>\nE       #6 0x55b90f4e36b3 <unknown>\nE       #7 0x55b90f4e468e <unknown>\nE       #8 0x55b90f785b0b <unknown>\nE       #9 0x55b90f789a91 <unknown>\nE       #10 0x55b90f772305 <unknown>\nE       #11 0x55b90f78a612 <unknown>\nE       #12 0x55b90f75746f <unknown>\nE       #13 0x55b90f7aa008 <unknown>\nE       #14 0x55b90f7aa1d3 <unknown>\nE       #15 0x55b90f7b9f5c <unknown>\nE       #16 0x7fa070f6c144 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: MoveTargetOutOfBoundsException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1727305957782,"stop":1727305957807,"duration":25},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1727306098433,"stop":1727306098769,"duration":336},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"check","time":{"start":1727306110127,"stop":1727306110127,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check the cursor style and cursor location while dragging","status":"broken","statusMessage":"selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x55b90f7bb10a <unknown>\n#1 0x55b90f4a143d <unknown>\n#2 0x55b90f53f4db <unknown>\n#3 0x55b90f515b22 <unknown>\n#4 0x55b90f534d7d <unknown>\n#5 0x55b90f5158c3 <unknown>\n#6 0x55b90f4e36b3 <unknown>\n#7 0x55b90f4e468e <unknown>\n#8 0x55b90f785b0b <unknown>\n#9 0x55b90f789a91 <unknown>\n#10 0x55b90f772305 <unknown>\n#11 0x55b90f78a612 <unknown>\n#12 0x55b90f75746f <unknown>\n#13 0x55b90f7aa008 <unknown>\n#14 0x55b90f7aa1d3 <unknown>\n#15 0x55b90f7b9f5c <unknown>\n#16 0x7fa070f6c144 <unknown>","statusTrace":"self = <test_interactions.TestInteractions.TestDraggablePage object at 0x7f38cd8d2570>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"24f66144834c2e82cb9d0f3147415037\")>\ncheck = <pytest_check.context_manager.CheckContextManager object at 0x7f38ce5c5790>\ncursor_location = 'bottom', style = 'auto'\n\n    @allure.description('Check the cursor style and cursor location while dragging')\n    @pytest.mark.parametrize('cursor_location, style', [('center', 'move'),\n                                                        ('top_left', 'crosshair'),\n                                                        ('bottom', 'auto')])\n    def test_cursor_style(self, driver, check, cursor_location, style):\n        page = DraggablePage(driver, URL.DRAGGABLE)\n        page.open_page()\n    \n        (cursor_style,\n         cursor_style_during_drag,\n         expected_top_left_x,\n         expected_top_left_y,\n         top_left_x,\n>        top_left_y) = page.drag_cursor_style_elements(cursor_location)\n\ntests/test_interactions.py:180: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/interactions_page.py:222: in drag_cursor_style_elements\n    action.move_by_offset(x_offset, y_offset).perform()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/action_chains.py:94: in perform\n    self.w3c_actions.perform()\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/actions/action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f38cd9194c0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"move target out of bounds\\\\n  (Sess...\\\\n#14 0x55b90f7aa1d3 \\\\u003Cunknown>\\\\n#15 0x55b90f7b9f5c \\\\u003Cunknown>\\\\n#16 0x7fa070f6c144 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\nE         (Session info: chrome=129.0.6668.58)\nE       Stacktrace:\nE       #0 0x55b90f7bb10a <unknown>\nE       #1 0x55b90f4a143d <unknown>\nE       #2 0x55b90f53f4db <unknown>\nE       #3 0x55b90f515b22 <unknown>\nE       #4 0x55b90f534d7d <unknown>\nE       #5 0x55b90f5158c3 <unknown>\nE       #6 0x55b90f4e36b3 <unknown>\nE       #7 0x55b90f4e468e <unknown>\nE       #8 0x55b90f785b0b <unknown>\nE       #9 0x55b90f789a91 <unknown>\nE       #10 0x55b90f772305 <unknown>\nE       #11 0x55b90f78a612 <unknown>\nE       #12 0x55b90f75746f <unknown>\nE       #13 0x55b90f7aa008 <unknown>\nE       #14 0x55b90f7aa1d3 <unknown>\nE       #15 0x55b90f7b9f5c <unknown>\nE       #16 0x7fa070f6c144 <unknown>\n\n/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: MoveTargetOutOfBoundsException","steps":[{"name":"Open https://demoqa.com/dragabble page","time":{"start":1727306110128,"stop":1727306110813,"duration":685},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Drag the elements on the Cursor Style tab","time":{"start":1727306110813,"stop":1727306111372,"duration":559},"status":"broken","statusMessage":"selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x55b90f7bb10a <unknown>\n#1 0x55b90f4a143d <unknown>\n#2 0x55b90f53f4db <unknown>\n#3 0x55b90f515b22 <unknown>\n#4 0x55b90f534d7d <unknown>\n#5 0x55b90f5158c3 <unknown>\n#6 0x55b90f4e36b3 <unknown>\n#7 0x55b90f4e468e <unknown>\n#8 0x55b90f785b0b <unknown>\n#9 0x55b90f789a91 <unknown>\n#10 0x55b90f772305 <unknown>\n#11 0x55b90f78a612 <unknown>\n#12 0x55b90f75746f <unknown>\n#13 0x55b90f7aa008 <unknown>\n#14 0x55b90f7aa1d3 <unknown>\n#15 0x55b90f7b9f5c <unknown>\n#16 0x7fa070f6c144 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/test_project/pages/interactions_page.py\", line 222, in drag_cursor_style_elements\n    action.move_by_offset(x_offset, y_offset).perform()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"cursor_location","value":"'bottom'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"2d152aa07629edc8","name":"stdout","source":"2d152aa07629edc8.txt","type":"text/plain","size":14}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1727306111407,"stop":1727306111647,"duration":240},"status":"passed","steps":[],"attachments":[{"uid":"b181909f1bab6d23","name":"Screenshot 2024-09-25 23:15:11.565223","source":"b181909f1bab6d23.png","type":"image/png","size":388184}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Draggable elements"},{"name":"suite","value":"Interactions"},{"name":"parentSuite","value":"tests"},{"name":"subSuite","value":"TestInteractions"},{"name":"host","value":"8e9b0438859b"},{"name":"thread","value":"8-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_interactions"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cursor_location","value":"'bottom'"},{"name":"style","value":"'auto'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"5320ee7324aa5576","status":"passed","time":{"start":1727299671204,"stop":1727299672784,"duration":1580}}]},"tags":[]},"source":"aa570492c3cbeb0b.json","parameterValues":["'bottom'","'auto'"]}